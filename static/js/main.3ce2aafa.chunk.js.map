{"version":3,"sources":["components/Nav/Nav.js","components/Header/Header.js","components/Collection/Collection.js","wallet/loader.mjs","wallet/coinSelection.mjs","components/nami/buy.js","components/Sale/Sale.js","components/Rarities/Rarities.js","components/Roadmap/Roadmap.js","components/About/About.js","views/Index/Content.js","components/Footer/Footer.js","views/Index/Index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","useState","scrolling","setScrolling","scrollTop","setScrollTop","useEffect","onScroll","e","target","documentElement","window","addEventListener","removeEventListener","navClassName","className","style","maxWidth","position","xmlns","width","height","viewBox","fill","d","stroke","strokeWidth","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Header","nfts","name","text","pictureUrl","galleryUrl","Collection","nft","changeNftSelection","marginTop","marginBottom","minHeight","minWidth","onChange","val","selectedValue","value","selectNft","map","i","key","alt","src","this","_wasm","protocolParameters","CoinSelection","setProtocolParameters","minUTxO","minFeeA","minFeeB","maxTxSize","randomImprove","inputs","outputs","limit","Error","Loader","load","_minUTxOValue","BigInt","len","utxoSelection","selection","remaining","subset","amount","Cardano","Value","new","BigNum","from_str","mergedOutputsAmounts","mergeOutputsAmounts","splitOutputsAmounts","splitAmounts","forEach","output","createSubSet","randomSelect","cloneUTxOSelection","length","message","descSelect","sortAmountList","range","ideal","checked_add","maximum","improve","input","change","checked_sub","outputAmount","minUTxOValue","nbFreeUTxO","isQtyFulfilled","utxo","splice","Math","floor","random","pop","push","addAmounts","sort","utxoA","utxoB","compare","newAmount","abs","getAmountValue","compiledAmountList","get","amounts","compiledAmounts","multiasset","mA","keys","scriptHash","j","_assets","Assets","assetName","insert","AssetName","from_bytes","to_bytes","_multiasset","MultiAsset","ScriptHash","_value","set_multiasset","coin","amountList","sortOrder","a","b","sortInt","Number","lovelace","to_str","index","undefined","cumulatedAmount","minAmount","min_ada_required","toString","maxFee","cloneUTxOList","cloneValue","utxoList","TransactionUnspentOutput","big","$","jQuery","_Buffer","Buffer","activateCardano","console","log","cardano","enable","blocks_latest","fetch","headers","then","response","json","catch","error","data","parameters","getProtocolParameters","latest_block","slotnumber","slot","p","linearFee","LinearFee","min_fee_a","min_fee_b","minUtxo","min_utxo","poolDeposit","pool_deposit","keyDeposit","key_deposit","max_tx_size","pay","addr","adaAmount","parseFloat","Address","getChangeAddress","from","paymentAddr","to_bech32","getUtxos","rawUtxo","utxos","u","TransactionOutputs","add","TransactionOutput","from_bech32","MULTIASSET_SIZE","VALUE_SIZE","coefficient","constant","txBuilder","TransactionBuilder","add_input","address","add_output","changeMultiAssets","partialChange","partialMultiAssets","policies","policy","policyAssets","assetNames","assets","k","policyAsset","quantity","checkMultiAssets","makeSplit","minAda","set_coin","add_change_if_needed","transaction","Transaction","build","TransactionWitnessSet","signTx","witneses","signedTx","body","submitTx","txhash","Buy","React","onClick","triggerPay","Sale","copySuccess","setCopySuccess","leftToSell","setLeftToSell","textAreaRef","useRef","res","parseInt","leftStock","isNaN","setNftStock","ref","readOnly","document","queryCommandSupported","current","select","execCommand","focus","Rarities","Roadmap","About","float","color","Content","data-name","preserveAspectRatio","fillOpacity","Footer","padding","margin","size","Index","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ce2aafa.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport React from \"react\"\r\n\r\nfunction Nav() {\r\n    const [scrolling, setScrolling] = useState(false)\r\n    const [scrollTop, setScrollTop] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const onScroll = e => {\r\n            setScrollTop(e.target.documentElement.scrollTop);\r\n            setScrolling(e.target.documentElement.scrollTop > scrollTop)\r\n        }\r\n        window.addEventListener(\"scroll\", onScroll)\r\n    \r\n        return () => window.removeEventListener(\"scroll\", onScroll)\r\n    }, [scrollTop])\r\n\r\n    let navClassName = \"navbar navbar-dark navbar-expand-lg sticky-top header-a\"\r\n\r\n    if(scrolling) navClassName += \" navbar-transparent-blck\"\r\n\r\n    return (\r\n        <nav className={navClassName}>\r\n            <div className=\"container nav-container\">\r\n                <div style={{maxWidth: \"250px\"}}>\r\n                    <svg style={{position: \"absolute\"}} xmlns=\"http://www.w3.org/2000/svg\" width=\"75\" height=\"75\" viewBox=\"0 0 75 75\" fill=\"none\">\r\n                        <path d=\"M28.4337 5H25.4516H28.4337ZM28.4337 5L13.5232 47.7102L25.4516 5H28.4337ZM28.4337 5L29.7848 8.47641L28.4337 5ZM25.4516 5L43.2091 44.7304L25.4516 5ZM22.9665 10.4629C-4.86647 21.1901 5.73656 35.1289 14.5172 40.7574C20.3914 44.0682 34.3535 49.4981 43.2091 44.7304L22.9665 10.4629ZM43.2091 44.7304L48.3144 56.1529L43.875 44.7304H43.2091ZM29.7848 8.47641L43.875 44.7304L29.7848 8.47641ZM29.7848 8.47641C29.3391 8.52159 28.8881 8.56732 28.4337 8.61343L29.7848 8.47641ZM29.7848 8.47641L28.4337 8.61343L29.7848 8.47641ZM43.875 44.7304C54.6325 31.1558 67.1017 4.90067 30.9188 8.47641C-4.16677 11.9437 13.9043 10.0876 28.4337 8.61343L43.875 44.7304ZM12.5291 28.3416L48.3144 15.9259L17.0023 28.3416H12.5291Z\" stroke=\"#FF0000\" strokeWidth=\"4\"/>\r\n                    </svg>\r\n                    <a className=\"navbar-brand brand anarchy-logo\" href=\"#root\">anarchyCNFT</a>\r\n                </div>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse alink\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"#root\">About</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#Collection\">Collection</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#Rarities\" >Rarities</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"#roadmap\">Roadmap</a>\r\n                        </li>\r\n                        <a className=\"btn btn-outline-dark start\" href=\"#buy\">Buy</a>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\n\r\nimport Nav from \"../Nav/Nav\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <Nav />\r\n    );\r\n\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\"\r\n\r\nconst nfts = [\r\n\t{\r\n\t\tname: \"anarchy1CNFT\",\r\n\t\ttext: \"Chaotic mess on the verge of collapse. Just like our society.\",\r\n\t\tpictureUrl: \"/images/anarchy1.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/PLA0CH7faoAXMdWexO6wweiUqe5cutHc4O2ztOMItIc\"\r\n\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy2CNFT\",\r\n\t\ttext: \"Birds, reptiles, nature. You can find anything in it. Definitely better then watching TV.\",\r\n\t\tpictureUrl: \"/images/anarchy2.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/3-2uKW9vp7xv5O7qtZhzo33_ZMPQwVTp2s_Z1cjTIg0\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy3CNFT\",\r\n\t\ttext: \"Blood in the wind. Animals can relate, some people too.\",\r\n\t\tpictureUrl: \"/images/anarchy3.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/tX_8wN11I2K5q_TDpeRcMgeYU0B_dloCQ7IWGnd1-eA\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy4CNFT\",\r\n\t\ttext: \"Empty inside. But shining.\",\r\n\t\tpictureUrl: \"/images/anarchy4.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/raQ4eawe0SgHa_rO2vHiKamfO6FvCx2DhuL5c6RI4UA\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy5CNFT\",\r\n\t\ttext: \"Everybody is just fighting for their piece.\",\r\n\t\tpictureUrl: \"/images/anarchy5.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/y3DW5k9cUN33uzb2wu6dd-7PYCBQleoXv9mYXJnMQJ8\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy6CNFT\",\r\n\t\ttext: \"Eyes looking out while all the horrible things are happening inside their inner circle.\",\r\n\t\tpictureUrl: \"/images/anarchy6.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/-ceOnfJZyUHbfkf4JGl9Xf4_hYg4v9MJQkyGG4rRVt8\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy7CNFT\",\r\n\t\ttext: \"Nature is taking revenge with flames.\",\r\n\t\tpictureUrl: \"/images/anarchy7.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/aeB-6650uPyBbARmFS908-PssHp8e5pMjyxNVCm072k\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy8CNFT\",\r\n\t\ttext: \"Thorny road through life. Whose fault is it?\",\r\n\t\tpictureUrl: \"/images/anarchy8.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/P32Da7TJJvn-toEiNRHYgk8S-d9Wzf7HtISw-iIpl5E\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy9CNFT\",\r\n\t\ttext: \"A Farewell to Arms\",\r\n\t\tpictureUrl: \"/images/anarchy9.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/KCCTcWeNBSSGfmjaZNzFOos8sXJ8zSYEcTw1a8LNb34\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy10CNFT\",\r\n\t\ttext: \"So deep into comfort that it's uncomfortable.\",\r\n\t\tpictureUrl: \"/images/anarchy10.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/5Qp1aKG04gdXhxMLLmzsh9ixrcuhrCHCayGL-LLHa9U\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy11CNFT\",\r\n\t\ttext: \"Nature's elements destroying man's pride like nothing.\",\r\n\t\tpictureUrl: \"/images/anarchy11.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/YOLwG9DFF8ibhPLutF4_Wzte77tBs9-YYfN-QgmgPyA\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy12CNFT\",\r\n\t\ttext: \"Surrounded by all the colors you can't recognize one.\",\r\n\t\tpictureUrl: \"/images/anarchy12.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/LBMwv7L5Zxbo4l1vwG706MZVKq7u9NUn7NNymKwQN8I\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy13CNFT\",\r\n\t\ttext: \"Hidden sadness and cry - it shouldn't be normal.\",\r\n\t\tpictureUrl: \"/images/anarchy13.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/p4AmkX8nunKa1LGms4faTFiqmmnSGAERtFC8p9IwZAg\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy14CNFT\",\r\n\t\ttext: \"The Art of Destruction - power of the society to destroy itself is developed collectivelly every day.\",\r\n\t\tpictureUrl: \"/images/anarchy14.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/zy_6CeIR-Eqrh95MUMAvszzF08GcjaWxhvTmyNggCjY\"\r\n\t},\r\n\t{\r\n\t\tname: \"anarchy15CNFT\",\r\n\t\ttext: \"Ocean life hidden under blanket from mess.\",\r\n\t\tpictureUrl: \"/images/anarchy15.jpg\",\r\n\t\tgalleryUrl: \"https://arweave.net/_X6tiHOWRNHjgAcWqovO_c51CDKbVnohERebEtuW-d4\"\r\n\t}\r\n]\r\n\r\n\r\nfunction Collection() {\r\n\tconst [nft, changeNftSelection] = useState(nfts[0])\r\n\r\n\tconst selectNft = (e) => {\r\n\t\tconst selectedValue = e.target.value\r\n\t\tchangeNftSelection(nfts[selectedValue])\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row\" style={{ marginTop: \"5vh\" }}>\r\n\t\t\t\t<div className=\"col-lg-12\">\r\n\t\t\t\t\t<select style={{ marginBottom: \"2vh\", minHeight: \"4vh\", minWidth: \"15vh\" }} onChange={(val) => selectNft(val)} className=\"form-select\" aria-label=\"Select NFT\">\r\n\t\t\t\t\t\t{nfts.map((nft, i) => <option value={i} key={i}>{nft.name}</option>)}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-lg-6 text-center\">\r\n\t\t\t\t\t<img style={{ width: \"100%\" }} alt={nft.name} src={nft.pictureUrl}></img>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-lg-1\"></div>\r\n\t\t\t\t<div style={{ marginBottom: \"25%\" }} className=\"col-lg-5 d-flex align-items-center\">\r\n\t\t\t\t\t<div className=\"align-middle d-flex flex-column\">\r\n\t\t\t\t\t\t<h3>{nft.name}</h3>\r\n\t\t\t\t\t\t<p>{nft.text}</p>\r\n\t\t\t\t\t\t{nft.galleryUrl ?\r\n\t\t\t\t\t\t\t<a href={nft.galleryUrl} style={{ marginTop: \"20px\" }}  target=\"_blank\" className=\"btn btn-info\">Gallery <br /> (Arweave permaweb)</a>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<> </>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<h6 style={{ width: \"100%\", marginTop: \"10vh\" }} className=\"strong text-center\">policy: 8be48195b34601787ff4db3439198dab6f687eb2f12d8389da6c457f</h6>\r\n\t\t</div>\r\n\r\n\t);\r\n}\r\nexport default Collection\r\n","class Loader {\r\n  async load() {\r\n    if (this._wasm) return;\r\n    /**\r\n     * @private\r\n     */\r\n    this._wasm = await import(\r\n      \"@emurgo/cardano-serialization-lib-browser/cardano_serialization_lib\"\r\n    );\r\n  }\r\n\r\n  get Cardano() {\r\n    return this._wasm;\r\n  }\r\n}\r\n\r\nexport default new Loader()","// import {\r\n// \tTransactionUnspentOutput,\r\n// \tTransactionOutputs,\r\n// \tValue,\r\n// } from '@emurgo/cardano-serialization-lib-browser/cardano_serialization_lib.js';\r\n\r\nimport Loader from \"./loader.mjs\"\r\n\r\n// const S = import('@emurgo/cardano-serialization-lib-browser/cardano_serialization_lib.js')\r\n\r\n// const Loader = {\r\n// \tCardano: S\r\n// }\r\n/* global BigInt */\r\n/**\r\n * BerryPool implementation of the __Random-Improve__ coin selection algorithm.\r\n *\r\n * = Overview\r\n *\r\n * The __Random-Improve__ coin selection algorithm works in __two phases__, by\r\n * /first/ selecting UTxO entries /at random/ to pay for each of the given\r\n * outputs, and /then/ attempting to /improve/ upon each of the selections.\r\n *\r\n * === Phase 1: Random Selection\r\n *\r\n * __In this phase, the algorithm randomly selects a minimal set of UTxO__\r\n * __entries to pay for each of the given outputs.__\r\n *\r\n * During this phase, the algorithm:\r\n *\r\n *   *  processes outputs in /descending order of coin value/.\r\n *\r\n *   *  maintains a /remaining UTxO set/, initially equal to the given\r\n *      /UTxO set/ parameter.\r\n *\r\n *   *  based on every output nature, generate a /native token UTxO subset/\r\n *      to narrow down to useful UTxO\r\n *\r\n *   *  maintains an /accumulated coin selection/, which is initially /empty/.\r\n *\r\n * For each output of value __/v/__, the algorithm /randomly/ selects entries\r\n * from the /remaining UTxO set/, until the total value of selected entries is\r\n * greater than or equal to __/v/__. The selected entries are then associated\r\n * with that output, and removed from the /remaining UTxO set/.\r\n *\r\n * This phase ends when every output has been associated with a selection of\r\n * UTxO entries.\r\n *\r\n * However, if the remaining UTxO set is completely exhausted before all\r\n * outputs can be processed, the algorithm terminates with an error.\r\n *\r\n * === Phase 2: Improvement\r\n *\r\n * __In this phase, the algorithm attempts to improve upon each of the UTxO__\r\n * __selections made in the previous phase, by conservatively expanding the__\r\n * __selection made for each output.__\r\n *\r\n * During this phase, the algorithm:\r\n *\r\n *   *  processes outputs in /ascending order of coin value/.\r\n *\r\n *   *  continues to maintain the /remaining UTxO set/ produced by the previous\r\n *      phase.\r\n *\r\n *   *  maintains an /accumulated coin selection/, initiated from previous phase.\r\n *\r\n * For each output of value __/v/__, the algorithm:\r\n *\r\n *  1.  __Calculates a /target range/__ for the total value of inputs used to\r\n *      pay for that output, defined by the triplet:\r\n *\r\n *      (/minimum/, /ideal/, /maximum/) = (/v/, /2v/, /3v/)\r\n *\r\n *  2.  __Attempts to /improve/ upon the /existing UTxO selection/__ for that\r\n *      output, by repeatedly selecting additional entries at random from the\r\n *      /remaining UTxO set/, stopping when the selection can be improved upon\r\n *      no further.\r\n *\r\n *      A selection with value /v1/ is considered to be an /improvement/ over a\r\n *      selection with value /v0/ if __all__ of the following conditions are\r\n *      satisfied:\r\n *\r\n *       * __Condition 1__: we have moved closer to the /ideal/ value:\r\n *\r\n *             abs (/ideal/ − /v1/) < abs (/ideal/ − /v0/)\r\n *\r\n *       * __Condition 2__: we have not exceeded the /maximum/ value:\r\n *\r\n *             /v1/ ≤ /maximum/\r\n *\r\n *       * __Condition 3__: when counting cumulatively across all outputs\r\n *       considered so far, we have not selected more than the /maximum/ number\r\n *       of UTxO entries specified by 'limit'.\r\n *\r\n *  3.  __Creates a /change value/__ for the output, equal to the total value\r\n *      of the /final UTxO selection/ for that output minus the value /v/ of\r\n *      that output.\r\n *\r\n *  4.  __Updates the /accumulated coin selection/__:\r\n *\r\n *       * Adds the /output/ to 'outputs'.\r\n *       * Adds the /improved UTxO selection/ to 'inputs'.\r\n *       * Adds the /change value/ to 'change'.\r\n *\r\n * This phase ends when every output has been processed, __or__ when the\r\n * /remaining UTxO set/ has been exhausted, whichever occurs sooner.\r\n *\r\n * = Termination\r\n *\r\n * When both phases are complete, the algorithm terminates.\r\n *\r\n * The /accumulated coin selection/ and /remaining UTxO set/ are returned to\r\n * the caller.\r\n *\r\n * === Failure Modes\r\n *\r\n * The algorithm terminates with an __error__ if:\r\n *\r\n *  1.  The /total value/ of the initial UTxO set (the amount of money\r\n *      /available/) is /less than/ the total value of the output list (the\r\n *      amount of money /required/).\r\n *\r\n *      See: __'InputsExhaustedError'__.\r\n *\r\n *  2.  The /number/ of UTxO entries needed to pay for the requested outputs\r\n *      would /exceed/ the upper limit specified by 'limit'.\r\n *\r\n *      See: __'InputLimitExceededError'__.\r\n *\r\n * == Motivating Principles\r\n *\r\n * There are several motivating principles behind the design of the algorithm.\r\n *\r\n * === Principle 1: Dust Management\r\n *\r\n * The probability that random selection will choose dust entries from a UTxO\r\n * set increases with the proportion of dust in the set.\r\n *\r\n * Therefore, for a UTxO set with a large amount of dust, there's a high\r\n * probability that a random subset will include a large amount of dust.\r\n *\r\n * === Principle 2: Change Management\r\n *\r\n * Ideally, coin selection algorithms should, over time, create a UTxO set that\r\n * has /useful/ outputs: outputs that will allow us to process future payments\r\n * with a minimum number of inputs.\r\n *\r\n * If for each payment request of value __/v/__ we create a change output of\r\n * /roughly/ the same value __/v/__, then we will end up with a distribution of\r\n * change values that matches the typical value distribution of payment\r\n * requests.\r\n *\r\n * === Principle 3: Performance Management\r\n *\r\n * Searching the UTxO set for additional entries to improve our change outputs\r\n * is /only/ useful if the UTxO set contains entries that are sufficiently\r\n * small enough. But it is precisely when the UTxO set contains many small\r\n * entries that it is less likely for a randomly-chosen UTxO entry to push the\r\n * total above the upper bound.\r\n */\r\n\r\n/**\r\n * @typedef {Value[]} AmountList - List of 'Value' object\r\n */\r\n\r\n/**\r\n * @typedef {TransactionUnspentOutput[]} UTxOList - List of UTxO\r\n */\r\n\r\n/**\r\n * @typedef {Object} UTxOSelection - Coin Selection algorithm core object\r\n * @property {UTxOList} selection - Accumulated UTxO set.\r\n * @property {UTxOList} remaining - Remaining UTxO set.\r\n * @property {UTxOList} subset - Remaining UTxO set.\r\n * @property {Value} amount - UTxO amount of each requested token\r\n */\r\n\r\n/**\r\n * @typedef {Object} ImproveRange - ImproveRange\r\n * @property {Value} ideal - Requested amount * 2\r\n * @property {Value} maximum - Requested amount * 3\r\n */\r\n\r\n/**\r\n * @typedef {Object} SelectionResult - Coin Selection algorithm return\r\n * @property {UTxOList} input - Accumulated UTxO set.\r\n * @property {OutputList} output - Requested outputs.\r\n * @property {UTxOList} remaining - Remaining UTxO set.\r\n * @property {Value} amount - UTxO amount of each requested token\r\n * @property {Value} change - Accumulated change amount.\r\n */\r\n\r\n/**\r\n * @typedef {Object} ProtocolParameters\r\n * @property {int} minUTxO\r\n * @property {int} minFeeA\r\n * @property {int} minFeeB\r\n * @property {int} maxTxSize\r\n */\r\n\r\n/**\r\n * @type {ProtocolParameters}\r\n */\r\nlet protocolParameters = null;\r\n\r\n/**\r\n * CoinSelection Module.\r\n * @module src/lib/CoinSelection\r\n */\r\nconst CoinSelection = {\r\n\t/**\r\n\t * Set protocol parameters required by the algorithm\r\n\t * @param {string} minUTxO\r\n\t * @param {string} minFeeA\r\n\t * @param {string} minFeeB\r\n\t * @param {string} maxTxSize\r\n\t */\r\n\tsetProtocolParameters: (minUTxO, minFeeA, minFeeB, maxTxSize) => {\r\n\t\tprotocolParameters = {\r\n\t\t\tminUTxO: minUTxO,\r\n\t\t\tminFeeA: minFeeA,\r\n\t\t\tminFeeB: minFeeB,\r\n\t\t\tmaxTxSize: maxTxSize,\r\n\t\t};\r\n\t},\r\n\t/**\r\n\t * Random-Improve coin selection algorithm\r\n\t * @param {UTxOList} inputs - The set of inputs available for selection.\r\n\t * @param {TransactionOutputs} outputs - The set of outputs requested for payment.\r\n\t * @param {int} limit - A limit on the number of inputs that can be selected.\r\n\t * @return {SelectionResult} - Coin Selection algorithm return\r\n\t */\r\n\trandomImprove: async (inputs, outputs, limit) => {\r\n\t\tif (!protocolParameters)\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'Protocol parameters not set. Use setProtocolParameters().'\r\n\t\t\t);\r\n\r\n\t\tawait Loader.load();\r\n\r\n\t\tconst _minUTxOValue =\r\n\t\t\tBigInt(outputs.len()) * BigInt(protocolParameters.minUTxO);\r\n\r\n\t\t/** @type {UTxOSelection} */\r\n\t\tlet utxoSelection = {\r\n\t\t\tselection: [],\r\n\t\t\tremaining: [...inputs], // Shallow copy\r\n\t\t\tsubset: [],\r\n\t\t\tamount: Loader.Cardano.Value.new(Loader.Cardano.BigNum.from_str('0')),\r\n\t\t};\r\n\r\n\t\tlet mergedOutputsAmounts = mergeOutputsAmounts(outputs);\r\n\r\n\t\t// Explode amount in an array of unique asset amount for comparison's sake\r\n\t\tlet splitOutputsAmounts = splitAmounts(mergedOutputsAmounts);\r\n\r\n\t\t// Phase 1: RandomSelect\r\n\t\tsplitOutputsAmounts.forEach((output) => {\r\n\t\t\tcreateSubSet(utxoSelection, output); // Narrow down for NatToken UTxO\r\n\r\n\t\t\ttry {\r\n\t\t\t\tutxoSelection = randomSelect(\r\n\t\t\t\t\tcloneUTxOSelection(utxoSelection), // Deep copy in case of fallback needed\r\n\t\t\t\t\toutput,\r\n\t\t\t\t\tlimit - utxoSelection.selection.length,\r\n\t\t\t\t\t_minUTxOValue\r\n\t\t\t\t);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tif (e.message === 'INPUT_LIMIT_EXCEEDED') {\r\n\t\t\t\t\t// Limit reached : Fallback on DescOrdAlgo\r\n\t\t\t\t\tutxoSelection = descSelect(\r\n\t\t\t\t\t\tutxoSelection,\r\n\t\t\t\t\t\toutput,\r\n\t\t\t\t\t\tlimit - utxoSelection.selection.length,\r\n\t\t\t\t\t\t_minUTxOValue\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow e;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Phase 2: Improve\r\n\t\tsplitOutputsAmounts = sortAmountList(splitOutputsAmounts);\r\n\r\n\t\tsplitOutputsAmounts.forEach((output) => {\r\n\t\t\tcreateSubSet(utxoSelection, output); // Narrow down for NatToken UTxO\r\n\r\n\t\t\tlet range = {};\r\n\t\t\trange.ideal = Loader.Cardano.Value.new(\r\n\t\t\t\tLoader.Cardano.BigNum.from_str('0')\r\n\t\t\t)\r\n\t\t\t\t.checked_add(output)\r\n\t\t\t\t.checked_add(output);\r\n\t\t\trange.maximum = Loader.Cardano.Value.new(\r\n\t\t\t\tLoader.Cardano.BigNum.from_str('0')\r\n\t\t\t)\r\n\t\t\t\t.checked_add(range.ideal)\r\n\t\t\t\t.checked_add(output);\r\n\r\n\t\t\timprove(\r\n\t\t\t\tutxoSelection,\r\n\t\t\t\toutput,\r\n\t\t\t\tlimit - utxoSelection.selection.length,\r\n\t\t\t\trange\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn {\r\n\t\t\tinput: utxoSelection.selection,\r\n\t\t\toutput: outputs,\r\n\t\t\tremaining: utxoSelection.remaining,\r\n\t\t\tamount: utxoSelection.amount,\r\n\t\t\tchange: utxoSelection.amount.checked_sub(mergedOutputsAmounts),\r\n\t\t};\r\n\t},\r\n};\r\n\r\n/**\r\n * Randomly select enough UTxO to fulfill requested outputs\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {int} minUTxOValue - Network protocol 'minUTxOValue' current value.\r\n * @throws INPUT_LIMIT_EXCEEDED if the number of randomly picked inputs exceed 'limit' parameter.\r\n * @throws INPUTS_EXHAUSTED if all UTxO doesn't hold enough funds to pay for output.\r\n * @throws MIN_UTXO_ERROR if lovelace change is under 'minUTxOValue' parameter.\r\n * @return {UTxOSelection} - Successful random utxo selection.\r\n */\r\nfunction randomSelect(utxoSelection, outputAmount, limit, minUTxOValue) {\r\n\tlet nbFreeUTxO = utxoSelection.subset.length;\r\n\t// If quantity is met, return subset into remaining list and exit\r\n\tif (\r\n\t\tisQtyFulfilled(outputAmount, utxoSelection.amount, minUTxOValue, nbFreeUTxO)\r\n\t) {\r\n\t\tutxoSelection.remaining = [\r\n\t\t\t...utxoSelection.remaining,\r\n\t\t\t...utxoSelection.subset,\r\n\t\t];\r\n\t\tutxoSelection.subset = [];\r\n\t\treturn utxoSelection;\r\n\t}\r\n\r\n\tif (limit <= 0) {\r\n\t\tthrow new Error('INPUT_LIMIT_EXCEEDED');\r\n\t}\r\n\r\n\tif (nbFreeUTxO <= 0) {\r\n\t\tif (isQtyFulfilled(outputAmount, utxoSelection.amount, 0, 0)) {\r\n\t\t\tthrow new Error('MIN_UTXO_ERROR');\r\n\t\t}\r\n\t\tthrow new Error('INPUTS_EXHAUSTED');\r\n\t}\r\n\r\n\t/** @type {TransactionUnspentOutput} utxo */\r\n\tlet utxo = utxoSelection.subset\r\n\t\t.splice(Math.floor(Math.random() * nbFreeUTxO), 1)\r\n\t\t.pop();\r\n\r\n\tutxoSelection.selection.push(utxo);\r\n\tutxoSelection.amount = addAmounts(\r\n\t\tutxo.output().amount(),\r\n\t\tutxoSelection.amount\r\n\t);\r\n\r\n\treturn randomSelect(utxoSelection, outputAmount, limit - 1, minUTxOValue);\r\n}\r\n\r\n/**\r\n * Select enough UTxO in DESC order to fulfill requested outputs\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {int} minUTxOValue - Network protocol 'minUTxOValue' current value.\r\n * @throws INPUT_LIMIT_EXCEEDED if the number of randomly picked inputs exceed 'limit' parameter.\r\n * @throws INPUTS_EXHAUSTED if all UTxO doesn't hold enough funds to pay for output.\r\n * @throws MIN_UTXO_ERROR if lovelace change is under 'minUTxOValue' parameter.\r\n * @return {UTxOSelection} - Successful random utxo selection.\r\n */\r\nfunction descSelect(utxoSelection, outputAmount, limit, minUTxOValue) {\r\n\t// Sort UTxO subset in DESC order for required Output unit type\r\n\tutxoSelection.subset = utxoSelection.subset.sort((utxoA, utxoB) =>\r\n\t\tutxoB.output().amount().compare(utxoA.output().amount())\r\n\t);\r\n\r\n\tdo {\r\n\t\tif (limit <= 0) {\r\n\t\t\tthrow new Error('INPUT_LIMIT_EXCEEDED');\r\n\t\t}\r\n\r\n\t\tif (utxoSelection.subset.length <= 0) {\r\n\t\t\tif (isQtyFulfilled(outputAmount, utxoSelection.amount, 0, 0)) {\r\n\t\t\t\tthrow new Error('MIN_UTXO_ERROR');\r\n\t\t\t}\r\n\t\t\tthrow new Error('INPUTS_EXHAUSTED');\r\n\t\t}\r\n\r\n\t\t/** @type {TransactionUnspentOutput} utxo */\r\n\t\tlet utxo = utxoSelection.subset.splice(0, 1).pop();\r\n\r\n\t\tutxoSelection.selection.push(utxo);\r\n\t\tutxoSelection.amount = addAmounts(\r\n\t\t\tutxo.output().amount(),\r\n\t\t\tutxoSelection.amount\r\n\t\t);\r\n\r\n\t\tlimit--;\r\n\t} while (\r\n\t\t!isQtyFulfilled(\r\n\t\t\toutputAmount,\r\n\t\t\tutxoSelection.amount,\r\n\t\t\tminUTxOValue,\r\n\t\t\tutxoSelection.subset.length - 1\r\n\t\t)\r\n\t);\r\n\r\n\t// Quantity is met, return subset into remaining list and return selection\r\n\tutxoSelection.remaining = [\r\n\t\t...utxoSelection.remaining,\r\n\t\t...utxoSelection.subset,\r\n\t];\r\n\tutxoSelection.subset = [];\r\n\r\n\treturn utxoSelection;\r\n}\r\n\r\n/**\r\n * Try to improve selection by increasing input amount in [2x,3x] range.\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {int} limit - A limit on the number of inputs that can be selected.\r\n * @param {ImproveRange} range - Improvement range target values\r\n */\r\nfunction improve(utxoSelection, outputAmount, limit, range) {\r\n\tlet nbFreeUTxO = utxoSelection.subset.length;\r\n\r\n\tif (\r\n\t\tutxoSelection.amount.compare(range.ideal) >= 0 ||\r\n\t\tnbFreeUTxO <= 0 ||\r\n\t\tlimit <= 0\r\n\t) {\r\n\t\t// Return subset in remaining\r\n\t\tutxoSelection.remaining = [\r\n\t\t\t...utxoSelection.remaining,\r\n\t\t\t...utxoSelection.subset,\r\n\t\t];\r\n\t\tutxoSelection.subset = [];\r\n\r\n\t\treturn;\r\n\t}\r\n\r\n\t/** @type {TransactionUnspentOutput} utxo */\r\n\tconst utxo = utxoSelection.subset\r\n\t\t.splice(Math.floor(Math.random() * nbFreeUTxO), 1)\r\n\t\t.pop();\r\n\r\n\tconst newAmount = Loader.Cardano.Value.new(\r\n\t\tLoader.Cardano.BigNum.from_str('0')\r\n\t)\r\n\t\t.checked_add(utxo.output().amount())\r\n\t\t.checked_add(outputAmount);\r\n\r\n\tif (\r\n\t\tabs(getAmountValue(range.ideal) - getAmountValue(newAmount)) <\r\n\t\tabs(getAmountValue(range.ideal) - getAmountValue(outputAmount)) &&\r\n\t\tnewAmount.compare(range.maximum) <= 0\r\n\t) {\r\n\t\tutxoSelection.selection.push(utxo);\r\n\t\tutxoSelection.amount = addAmounts(\r\n\t\t\tutxo.output().amount(),\r\n\t\t\tutxoSelection.amount\r\n\t\t);\r\n\t\tlimit--;\r\n\t} else {\r\n\t\tutxoSelection.remaining.push(utxo);\r\n\t}\r\n\r\n\treturn improve(utxoSelection, outputAmount, limit, range);\r\n}\r\n\r\n/**\r\n * Compile all required outputs to a flat amounts list\r\n * @param {TransactionOutputs} outputs - The set of outputs requested for payment.\r\n * @return {Value} - The compiled set of amounts requested for payment.\r\n */\r\nfunction mergeOutputsAmounts(outputs) {\r\n\tlet compiledAmountList = Loader.Cardano.Value.new(\r\n\t\tLoader.Cardano.BigNum.from_str('0')\r\n\t);\r\n\r\n\tfor (let i = 0; i < outputs.len(); i++) {\r\n\t\tcompiledAmountList = addAmounts(\r\n\t\t\toutputs.get(i).amount(),\r\n\t\t\tcompiledAmountList\r\n\t\t);\r\n\t}\r\n\r\n\treturn compiledAmountList;\r\n}\r\n\r\n/**\r\n * Add up an Amounts List values to another Amounts List\r\n * @param {Value} amounts - Set of amounts to be added.\r\n * @param {Value} compiledAmounts - The compiled set of amounts.\r\n * @return {Value}\r\n */\r\nfunction addAmounts(amounts, compiledAmounts) {\r\n\treturn compiledAmounts.checked_add(amounts);\r\n}\r\n\r\n/**\r\n * Split amounts contained in a single {Value} object in separate {Value} objects\r\n * @param {Value} amounts - Set of amounts to be split.\r\n * @throws MIN_UTXO_ERROR if lovelace change is under 'minUTxOValue' parameter.\r\n * @return {AmountList}\r\n */\r\nfunction splitAmounts(amounts) {\r\n\tlet splitAmounts = [];\r\n\r\n\tif (amounts.multiasset()) {\r\n\t\tlet mA = amounts.multiasset();\r\n\r\n\t\tfor (let i = 0; i < mA.keys().len(); i++) {\r\n\t\t\tlet scriptHash = mA.keys().get(i);\r\n\r\n\t\t\tfor (let j = 0; j < mA.get(scriptHash).keys().len(); j++) {\r\n\t\t\t\tlet _assets = Loader.Cardano.Assets.new();\r\n\t\t\t\tlet assetName = mA.get(scriptHash).keys().get(j);\r\n\r\n\t\t\t\t_assets.insert(\r\n\t\t\t\t\tLoader.Cardano.AssetName.from_bytes(assetName.to_bytes()),\r\n\t\t\t\t\tLoader.Cardano.BigNum.from_bytes(\r\n\t\t\t\t\t\tmA.get(scriptHash).get(assetName).to_bytes()\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\r\n\t\t\t\tlet _multiasset = Loader.Cardano.MultiAsset.new();\r\n\t\t\t\t_multiasset.insert(\r\n\t\t\t\t\tLoader.Cardano.ScriptHash.from_bytes(scriptHash.to_bytes()),\r\n\t\t\t\t\t_assets\r\n\t\t\t\t);\r\n\t\t\t\tlet _value = Loader.Cardano.Value.new(\r\n\t\t\t\t\tLoader.Cardano.BigNum.from_str('0')\r\n\t\t\t\t);\r\n\t\t\t\t_value.set_multiasset(_multiasset);\r\n\r\n\t\t\t\tsplitAmounts.push(_value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Order assets by qty DESC\r\n\tsplitAmounts = sortAmountList(splitAmounts, 'DESC');\r\n\r\n\t// Insure lovelace is last to account for min ada requirement\r\n\tsplitAmounts.push(\r\n\t\tLoader.Cardano.Value.new(\r\n\t\t\tLoader.Cardano.BigNum.from_bytes(amounts.coin().to_bytes())\r\n\t\t)\r\n\t);\r\n\r\n\treturn splitAmounts;\r\n}\r\n\r\n/**\r\n * Sort a mismatched AmountList ASC/DESC\r\n * @param {AmountList} amountList - Set of mismatched amounts to be sorted.\r\n * @param {string} [sortOrder=ASC] - Order\r\n * @return {AmountList} - The sorted AmountList\r\n */\r\nfunction sortAmountList(amountList, sortOrder = 'ASC') {\r\n\treturn amountList.sort((a, b) => {\r\n\t\tlet sortInt = sortOrder === 'DESC' ? BigInt(-1) : BigInt(1);\r\n\t\treturn Number((getAmountValue(a) - getAmountValue(b)) * sortInt);\r\n\t});\r\n}\r\n\r\n/**\r\n * Return BigInt amount value\r\n * @param amount\r\n * @return {bigint}\r\n */\r\nfunction getAmountValue(amount) {\r\n\tlet val = BigInt(0);\r\n\tlet lovelace = BigInt(amount.coin().to_str());\r\n\r\n\tif (lovelace > 0) {\r\n\t\tval = lovelace;\r\n\t} else if (amount.multiasset() && amount.multiasset().len() > 0) {\r\n\t\tlet scriptHash = amount.multiasset().keys().get(0);\r\n\t\tlet assetName = amount.multiasset().get(scriptHash).keys().get(0);\r\n\t\tval = BigInt(amount.multiasset().get(scriptHash).get(assetName).to_str());\r\n\t}\r\n\r\n\treturn val;\r\n}\r\n\r\n/**\r\n * Narrow down remaining UTxO set in case of native token, use full set for lovelace\r\n * @param {UTxOSelection} utxoSelection - The set of selected/available inputs.\r\n * @param {Value} output - Single compiled output qty requested for payment.\r\n */\r\nfunction createSubSet(utxoSelection, output) {\r\n\tif (BigInt(output.coin().to_str()) < BigInt(1)) {\r\n\t\tutxoSelection.remaining.forEach((utxo, index) => {\r\n\t\t\tif (output.compare(utxo.output().amount()) !== undefined) {\r\n\t\t\t\tutxoSelection.subset.push(\r\n\t\t\t\t\tutxoSelection.remaining.splice(index, 1).pop()\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t} else {\r\n\t\tutxoSelection.subset = utxoSelection.remaining.splice(\r\n\t\t\t0,\r\n\t\t\tutxoSelection.remaining.length\r\n\t\t);\r\n\t}\r\n}\r\n\r\n/**\r\n * Is Quantity Fulfilled Condition - Handle 'minUTxOValue' protocol parameter.\r\n * @param {Value} outputAmount - Single compiled output qty requested for payment.\r\n * @param {Value} cumulatedAmount - Single compiled accumulated UTxO qty.\r\n * @param {int} minUTxOValue - Network protocol 'minUTxOValue' current value.\r\n * @param {int} nbFreeUTxO - Number of free UTxO available.\r\n * @return {boolean}\r\n */\r\nfunction isQtyFulfilled(\r\n\toutputAmount,\r\n\tcumulatedAmount,\r\n\tminUTxOValue,\r\n\tnbFreeUTxO\r\n) {\r\n\tlet amount = outputAmount;\r\n\r\n\tif (minUTxOValue && BigInt(outputAmount.coin().to_str()) > 0) {\r\n\t\tlet minAmount = Loader.Cardano.Value.new(\r\n\t\t\tLoader.Cardano.min_ada_required(\r\n\t\t\t\tcumulatedAmount,\r\n\t\t\t\tLoader.Cardano.BigNum.from_str(minUTxOValue.toString())\r\n\t\t\t)\r\n\t\t);\r\n\r\n\t\t// Lovelace min amount to cover assets and number of output need to be met\r\n\t\tif (cumulatedAmount.compare(minAmount) < 0) return false;\r\n\r\n\t\t// If requested Lovelace lower than minAmount, plan for change\r\n\t\tif (outputAmount.compare(minAmount) < 0) {\r\n\t\t\tamount = minAmount.checked_add(\r\n\t\t\t\tLoader.Cardano.Value.new(\r\n\t\t\t\t\tLoader.Cardano.BigNum.from_str(protocolParameters.minUTxO)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\t// Try covering the max fees\r\n\t\tif (nbFreeUTxO > 0) {\r\n\t\t\tlet maxFee =\r\n\t\t\t\tBigInt(protocolParameters.minFeeA) *\r\n\t\t\t\tBigInt(protocolParameters.maxTxSize) +\r\n\t\t\t\tBigInt(protocolParameters.minFeeB);\r\n\r\n\t\t\tmaxFee = Loader.Cardano.Value.new(\r\n\t\t\t\tLoader.Cardano.BigNum.from_str(maxFee.toString())\r\n\t\t\t);\r\n\r\n\t\t\tamount = amount.checked_add(maxFee);\r\n\t\t}\r\n\t}\r\n\r\n\treturn cumulatedAmount.compare(amount) >= 0;\r\n}\r\n\r\n/**\r\n * Return a deep copy of UTxOSelection\r\n * @param {UTxOSelection} utxoSelection\r\n * @return {UTxOSelection} Clone - Deep copy\r\n */\r\nfunction cloneUTxOSelection(utxoSelection) {\r\n\treturn {\r\n\t\tselection: cloneUTxOList(utxoSelection.selection),\r\n\t\tremaining: cloneUTxOList(utxoSelection.remaining),\r\n\t\tsubset: cloneUTxOList(utxoSelection.subset),\r\n\t\tamount: cloneValue(utxoSelection.amount),\r\n\t};\r\n}\r\n\r\n/**\r\n * Return a deep copy of an UTxO List\r\n * @param {UTxOList} utxoList\r\n * @return {UTxOList} Cone - Deep copy\r\n */\r\nconst cloneUTxOList = (utxoList) =>\r\n\tutxoList.map((utxo) =>\r\n\t\tLoader.Cardano.TransactionUnspentOutput.from_bytes(utxo.to_bytes())\r\n\t);\r\n\r\n/**\r\n * Return a deep copy of a Value object\r\n * @param {Value} value\r\n * @return {Value} Cone - Deep copy\r\n */\r\nconst cloneValue = (value) => Loader.Cardano.Value.from_bytes(value.to_bytes());\r\n\r\n// Helper\r\nfunction abs(big) {\r\n\treturn big < 0 ? big * BigInt(-1) : big;\r\n}\r\n\r\nexport default CoinSelection;","import React from \"react\";\r\nimport CoinSelection from '../../wallet/coinSelection.mjs'\r\nimport { Buffer } from 'buffer'\r\nlet Cardano = null\r\n\r\nwindow.$ = window.jQuery = import(\"jquery\");\r\n\r\nconst _Buffer = Buffer\r\n\r\n\r\n\r\nasync function activateCardano() {\r\n\tconsole.log('connecting');\r\n\tawait window.cardano?.enable()\r\n}\r\n\r\nasync function blocks_latest() {\r\n\treturn await fetch('https://cardano-mainnet.blockfrost.io/api/v0/blocks/latest', {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'project_id': 'GHf1olOJblaj5LD8rcRudajSJGKRU6IL'\r\n\t\t}\r\n\t}).then((response) =>  response.json()).catch((error) => error.response.data)\r\n};\r\n\r\n\r\nasync function parameters() {\r\n\treturn await fetch('https://cardano-mainnet.blockfrost.io/api/v0/epochs/latest/parameters', {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'project_id': 'GHf1olOJblaj5LD8rcRudajSJGKRU6IL'\r\n\t\t}\r\n\t}).then((response) => response.json()).catch((error) => error.response.data)\r\n};\r\n\r\nasync function getProtocolParameters() {\r\n\t// var HOST = process.env.API ? process.env.API : location.origin;\r\n\tconst latest_block = await blocks_latest();\r\n\r\n\tvar slotnumber = latest_block.slot;\r\n\r\n\tconst p = await parameters()\r\n\r\n\tvar value = {\r\n\t\tlinearFee: Cardano.LinearFee.new(\r\n\t\t\tCardano.BigNum.from_str(p.min_fee_a.toString()),\r\n\t\t\tCardano.BigNum.from_str(p.min_fee_b.toString())\r\n\t\t),\r\n\t\tminUtxo: Cardano.BigNum.from_str(p.min_utxo),\r\n\t\tpoolDeposit: Cardano.BigNum.from_str(p.pool_deposit),\r\n\t\tkeyDeposit: Cardano.BigNum.from_str(p.key_deposit),\r\n\t\tmaxTxSize: p.max_tx_size,\r\n\t\tslot: slotnumber,\r\n\t};\r\n\treturn value;\r\n};\r\n\r\n\r\nasync function triggerPay() {\r\n\ttry {\r\n\t\tactivateCardano();\r\n\t} catch (e) {\r\n\t\tconsole.error(e);\r\n\t} finally {\r\n\t\tconsole.log('We do cleanup here');\r\n\t}\r\n\tif (!Cardano)\r\n\t{\r\n\t\tCardano = await import(\r\n\t\t\t'@emurgo/cardano-serialization-lib-browser/cardano_serialization_lib'\r\n\t\t);\r\n\t}  \r\n\t//var user = await window.cardano.getUsedAddresses();\r\n\tvar address = \"addr1vxmnswltkk0gnm3h7f6nupmdn2t34dfrz60ftswrt3rw4aq632z82\"\r\n\t\r\n\treturn await pay(address, 35);\r\n}\r\n\r\nasync function pay(addr, adaAmount) {\r\n\tconst cardano = window.cardano\r\n\tconst protocolParameters = await getProtocolParameters()\r\n\tconst lovelace = (parseFloat(adaAmount) * 1000000).toString()\r\n\r\n\r\n\tconst paymentAddr = Cardano.Address.from_bytes(_Buffer.from(await cardano.getChangeAddress(), 'hex')).to_bech32()\r\n\tconst rawUtxo = await cardano.getUtxos()\r\n\tconst utxos = rawUtxo.map(u => Cardano.TransactionUnspentOutput.from_bytes(_Buffer.from(u, 'hex')))\r\n\tconst outputs = Cardano.TransactionOutputs.new()\r\n\r\n\toutputs.add(\r\n\t\tCardano.TransactionOutput.new(\r\n\t\t\tCardano.Address.from_bech32(addr),\r\n\t\t\tCardano.Value.new(\r\n\t\t\t\tCardano.BigNum.from_str(lovelace)\r\n\t\t\t)\r\n\t\t)\r\n\t)\r\n\r\n\tconst MULTIASSET_SIZE = 5848;\r\n\tconst VALUE_SIZE = 5860;\r\n\tconst totalAssets = 0\r\n\tCoinSelection.setProtocolParameters(\r\n\t\tprotocolParameters.minUtxo.to_str(),\r\n\t\tprotocolParameters.linearFee.coefficient().to_str(),\r\n\t\tprotocolParameters.linearFee.constant().to_str(),\r\n\t\tprotocolParameters.maxTxSize.toString()\r\n\t);\r\n\r\n\tconst selection = await CoinSelection.randomImprove(\r\n\t\tutxos,\r\n\t\toutputs,\r\n\t\t20 + totalAssets,\r\n\t\tprotocolParameters.minUtxo.to_str()\r\n\t);\r\n\r\n\tconst inputs = selection.input;\r\n\tconst txBuilder = Cardano.TransactionBuilder.new(\r\n\t\tprotocolParameters.linearFee,\r\n\t\tprotocolParameters.minUtxo,\r\n\t\tprotocolParameters.poolDeposit,\r\n\t\tprotocolParameters.keyDeposit\r\n\t);\r\n\r\n\tfor (let i = 0; i < inputs.length; i++) {\r\n\t\tconst utxo = inputs[i];\r\n\t\ttxBuilder.add_input(\r\n\t\t\tutxo.output().address(),\r\n\t\t\tutxo.input(),\r\n\t\t\tutxo.output().amount()\r\n\t\t);\r\n\t}\r\n\r\n\ttxBuilder.add_output(outputs.get(0));\r\n\r\n\tconst change = selection.change;\r\n\tconst changeMultiAssets = change.multiasset();\r\n\r\n\t// check if change value is too big for single output\r\n\tif (changeMultiAssets && change.to_bytes().length * 2 > VALUE_SIZE) {\r\n\t\tconst partialChange = Cardano.Value.new(\r\n\t\t\tCardano.BigNum.from_str('0')\r\n\t\t);\r\n\r\n\t\tconst partialMultiAssets = Cardano.MultiAsset.new();\r\n\t\tconst policies = changeMultiAssets.keys();\r\n\t\tconst makeSplit = () => {\r\n\t\t\tfor (let j = 0; j < changeMultiAssets.len(); j++) {\r\n\t\t\t\tconst policy = policies.get(j);\r\n\t\t\t\tconst policyAssets = changeMultiAssets.get(policy);\r\n\t\t\t\tconst assetNames = policyAssets.keys();\r\n\t\t\t\tconst assets = Cardano.Assets.new();\r\n\t\t\t\tfor (let k = 0; k < assetNames.len(); k++) {\r\n\t\t\t\t\tconst policyAsset = assetNames.get(k);\r\n\t\t\t\t\tconst quantity = policyAssets.get(policyAsset);\r\n\t\t\t\t\tassets.insert(policyAsset, quantity);\r\n\t\t\t\t\t//check size\r\n\t\t\t\t\tconst checkMultiAssets = Cardano.MultiAsset.from_bytes(\r\n\t\t\t\t\t\tpartialMultiAssets.to_bytes()\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcheckMultiAssets.insert(policy, assets);\r\n\t\t\t\t\tif (checkMultiAssets.to_bytes().length * 2 >= MULTIASSET_SIZE) {\r\n\t\t\t\t\t\tpartialMultiAssets.insert(policy, assets);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpartialMultiAssets.insert(policy, assets);\r\n\t\t\t}\r\n\t\t};\r\n\t\tmakeSplit();\r\n\t\tpartialChange.set_multiasset(partialMultiAssets);\r\n\t\tconst minAda = Cardano.min_ada_required(\r\n\t\t\tpartialChange,\r\n\t\t\tprotocolParameters.minUtxo\r\n\t\t);\r\n\t\tpartialChange.set_coin(minAda);\r\n\r\n\t\ttxBuilder.add_output(\r\n\t\t\tCardano.TransactionOutput.new(\r\n\t\t\t\tCardano.Address.from_bech32(paymentAddr),\r\n\t\t\t\tpartialChange\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\r\n\ttxBuilder.add_change_if_needed(\r\n\t\tCardano.Address.from_bech32(paymentAddr)\r\n\t);\r\n\r\n\tconst transaction = Cardano.Transaction.new(\r\n\t\ttxBuilder.build(),\r\n\t\tCardano.TransactionWitnessSet.new(),\r\n\t);\r\n\r\n\tconst size = transaction.to_bytes().length * 2;\r\n\tif (size > protocolParameters.maxTxSize) throw \"Mmax tx size\"\r\n\r\n\tconst witneses = await cardano.signTx(_Buffer.from(transaction.to_bytes(), 'hex').toString('hex'))\r\n\tconst signedTx = Cardano.Transaction.new(transaction.body(), Cardano.TransactionWitnessSet.from_bytes(_Buffer.from(witneses, \"hex\"))) // ,transaction.metadata()\r\n\tconst txhash = await cardano.submitTx(_Buffer.from(signedTx.to_bytes(), 'hex').toString('hex'))\r\n\r\n\treturn txhash\r\n}\r\n\r\nfunction Buy() {\r\n\tconst leftToSell = 0\r\n\tReact.useEffect(() => {\r\n\t\t\tactivateCardano();\r\n\t\t},\r\n\t[])\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button type=\"button\" style={{ width: \"25%\" }} onClick={() => triggerPay()} className=\"btn btn-light d-none d-md-block\">Buy with Nami</button>\r\n\t\t</>\r\n\t);\r\n\r\n}\r\n\r\nexport default Buy;\r\n\r\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Buy from \"../../components/nami/buy\"\r\n\r\n\r\nfunction Sale() {\r\n\tconst [copySuccess, setCopySuccess] = useState('Copy address');\r\n\tconst [leftToSell, setLeftToSell] = useState();\r\n\tconst textAreaRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function setNftStock(){\r\n\t\t\tvar res = await fetch(\"https://getaanarchynftstock.azurewebsites.net/api/GetNftLeftFunction\")\r\n\t\t\tvar leftStock = parseInt(await res.json())\r\n\t\t\tif(!isNaN(leftStock))\r\n\t\t\t{\r\n\t\t\t\tif(leftStock < 1) leftStock = 0\r\n\r\n\t\t\t\tsetLeftToSell(leftStock)\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetNftStock()\r\n\t}, []);\r\n\r\n\tfunction copyToClipboard(e) {\r\n\t\ttextAreaRef.current.select();\r\n\t\tdocument.execCommand('copy');\r\n\t\te.target.focus();\r\n\t\tif (copySuccess !== 'Copied!') {\r\n\t\t\tsetCopySuccess('Copied!');\r\n\t\t} else {\r\n\t\t\tsetCopySuccess('Copy address')\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row d-flex justify-content-center\">\r\n\t\t\t\t<div style={{ minHeight: \"45vh\" }} className=\"col-lg-8 d-flex flex-column align-items-center text-center\">\r\n\t\t\t\t\t<img src=\"/images/sale-qr.png\" alt=\"Cardano ADA payment address\" style={{ marginTop: \"10vh\", marginBottom: \"3vh\" }} />\r\n\t\t\t\t\t{/* <div style={{ marginTop: \"10vh\", marginBottom: \"3vh\", width: \"300px\", height: \"300px\", background: \"linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(255,255,255,1) 100%)\" }} />  */}\r\n\t\t\t\t\t<h5 style={{ width: \"100%\" }}>Address:</h5>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tref={textAreaRef}\r\n\t\t\t\t\t\t\t\tstyle={{ height: \"2rem\", width: \"100%\" }}\r\n\t\t\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t\t\t\tvalue='addr1vxmnswltkk0gnm3h7f6nupmdn2t34dfrz60ftswrt3rw4aq632z82'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdocument.queryCommandSupported('copy') &&\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<button style={{ marginBottom: \"3vh\", marginTop: \"1vh\", width: \"100%\" }} className=\"btn btn-light\" onClick={copyToClipboard}>{copySuccess}</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<h5>Price:</h5>\r\n\t\t\t\t\t<p style={{ width: \"100%\" }} className=\"strong\">35₳</p>\r\n\t\t\t\t\t<Buy />\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<h6>Do not send funds from an exchange! Use Cardano native tokens supporting wallet.</h6>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<h7>To see your new NFT, check your address on <a href=\"https://pool.pm\">pool.pm</a>. It can take 30 minutes or longer in high demand.</h7>\r\n\t\t\t\t\t<h7>With any problems, send us message on Twitter or an email!</h7>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div style={{ minHeight: \"25vh\" }} className=\"row d-flex align-items-center justify-content-center\">\r\n\t\t\t\t<h2>{leftToSell} of 600 left</h2>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Sale;\r\n","import React from \"react\";\r\n\r\nexport default function Rarities() {\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row text-center\">\r\n                <div className=\"col-lg-4\">\r\n                    <img style={{ width: \"300px\", height: \"300px\" }} src=\"/images/common.png\" alt=\"Common\" />\r\n                    <h5>Common</h5>\r\n                    <p>35% NFTs will be without a logo, on slightly white transparent frame. Keywords are white over black and can be on one of the sides. There is 14 frame variations for each design.</p>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                    <img style={{ width: \"300px\", height: \"300px\" }} src=\"/images/uncommon.png\" alt=\"Uncommon\" />\r\n                    <h5>Uncommon</h5>\r\n                    <p>25% NFTs will have a white logo on the picture, on slightly transparent white frame and keywords on one side. For each picture, there is 10 different Uncommon frames.</p>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                    <img style={{ width: \"300px\", height: \"300px\" }} src=\"/images/rare.png\" alt=\"Rare\" />\r\n                    <h5>Rare</h5>\r\n                    <p>17.5% Rare NFTs are in full yellow, slightly transparent frame. Keywords are at the bottom and there is 7 combinations for each design.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row text-center\">\r\n                <div className=\"col-lg-4\">\r\n                    <img style={{ width: \"300px\", height: \"300px\" }} src=\"/images/super-rare.png\" alt=\"Super Rare\" />\r\n                    <h5>Super Rare</h5>\r\n                    <p>12.5% NFTs - Super Rare - on slightly transparent black background with black writing. Keywords are at the frame's bottom and for each picture there is 5 variations.</p>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                    <img style={{ width: \"300px\", height: \"300px\" }} src=\"/images/epic.png\" alt=\"Epic\" />\r\n                    <h5>Epic</h5>\r\n                    <p>7.5% NFTs are of Epic rarity with keywords at the bottom and only 3 frame variations for each design. Frame is slightly transparent purple with purple attachments.</p>\r\n                </div>\r\n                <div className=\"col-lg-4\">\r\n                    <img style={{ width: \"300px\", height: \"300px\" }} src=\"/images/legendary.png\" alt=\"Legendary\" />\r\n                    <h5>Legendary</h5>\r\n                    <p>2.5% Legendary NFTs - only one per design. All red, with 3 keywords at the bottom.</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function Roadmap() {\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div style={{ minHeight: \"75vh\" }} className=\"row d-flex align-items-center\">\r\n\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t<img src=\"/images/billboard.png\" alt=\"Stage 1\" className=\"mobilePad-up\" style={{ width: \"50%\" }} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"lead mt-2\">Release the project with first collection sale.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t<div >\r\n\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t<img src=\"/images/art-and-design.png\" className=\"mobilePad-up\" alt=\"Stage 2\" style={{ width: \"50%\" }} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"lead mt-2\">Join community and artists together to fund real world causes.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-lg-4\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t<img src=\"/images/view.png\" alt=\"Stage 3\" className=\"mobilePad-up\" style={{ width: \"50%\" }} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"lead mt-2\">Change the world.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from \"react\";\r\n\r\nexport default function About() {\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-sm-3 talk\">\r\n\t\t\t\t\t<h1>anarchy</h1>\r\n\t\t\t\t\t<h1>CNFT</h1>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<h6 className=\"bold-four\">\r\n\t\t\t\t\t\tAiming to create a safe place for unconventional art and support underground artists to share their messages with the world permanently.  Art is a powerful tool that can enable us to realize the truth and blockchain is the best place to save it.\r\n\t\t\t\t\t</h6>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<h6><a className=\"btn btn-dark start start-two\" href=\"https://medium.com/@anarchycnft/anarchycnft-art-anarchy-oriented-project-on-cardano-340028ea0a48\" target=\"_blank\">Read more</a></h6>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-md-9 text-center\">\r\n\t\t\t\t\t<img className=\"img-fluid\" src=\"/images/about.png\" style={{float: \"right\"}} alt=\"anarchyCNFT First Collection\"/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row anarchy-art-quote align-items-center\">\r\n\t\t\t\t<div className=\"col-lg-12\" style={{ color: \"#63171B\" }}>\r\n\t\t\t\t\t<h2 className=\"font-italic text-center\">\"An artist as an artist must be an anarchist.\"</h2>\r\n\t\t\t\t\t<h5 className=\"text-center\">Kurt Eisner</h5>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport Collection from \"../../components/Collection/Collection\"\r\nimport Sale from \"../../components/Sale/Sale\"\r\nimport Rarities from \"../../components/Rarities/Rarities\"\r\nimport Roadmap from \"../../components/Roadmap/Roadmap\"\r\nimport About from \"../../components/About/About\"\r\n\r\nfunction Content() {\r\n    return (\r\n        <div>\r\n            <section id=\"About\" className=\"black-bg content align-items-center\">\r\n                <About />\r\n            </section>\r\n            <section id=\"Collection\" className=\"rarity-section content align-items-center\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"xMidYMin slice\" ><path d=\"M1200 0L0 0 892.25 114.72 1200 0z\" fill=\"#000000\" fillOpacity=\"1\"/></svg>\r\n                <Collection/>\r\n                <svg style={{marginTop:\"5vh\"}} xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" preserveAspectRatio=\"xMidYMin slice\"  viewBox=\"0 0 1200 120\"><path d=\"M892.25 114.72L0 0 0 120 1200 120 1200 0 892.25 114.72z\" className=\"shape-fill\" fill=\"#000000\" fillOpacity=\"1\"/></svg>\r\n            </section>\r\n                <section id=\"Rarities\" className=\"black-bg d-flex content align-items-center\">\r\n                    <Rarities />\r\n                </section>\r\n                <section id=\"buy\" className=\"content buy align-items-center\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"xMidYMin slice\" ><path d=\"M1200 0L0 0 892.25 114.72 1200 0z\" fill=\"#000000\" fillOpacity=\"1\"/></svg>\r\n                    <Sale />\r\n                </section> \r\n            <section id=\"roadmap\" className=\"align-items-center features-icons text-center\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" data-name=\"Layer 1\" viewBox=\"0 0 1200 120\" preserveAspectRatio=\"xMidYMin slice\" ><path d=\"M1200 0L0 0 892.25 114.72 1200 0z\" fill=\"#191d28\" fillOpacity=\"1\"/></svg>\r\n                <Roadmap />\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","import React from \"react\"\r\nimport { FaTwitter, FaInstagram, FaEnvelope } from \"react-icons/fa\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"font-small footer\">\r\n            <div className=\"copyright-text\">&copy;anarchyCNFT - powered by Cardano   \r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMin slice\" style={{padding:\"0.5rem\"}} height=\"3.5rem\" viewBox=\"0 0 2000 1848\"><g fill=\"#fff\"><path d=\"M975.46 5.46c43.59-22.73 96.8 30 73.64 73.55-13.45 35.5-64.45 44.94-90.5 17.88C931 70.92 940 19.59 975.46 5.46M506.61 56c26.48-10.9 60 13.36 57.3 42.22 2.81 31.33-35.5 54.39-62.49 39.5-35.76-13.85-31.67-71.9 5.19-81.72M1466.87 138.6c-41.38-5-47.93-70.06-8.09-83.16 30.9-15.07 59.25 13.19 63.77 42.48-6.48 25.01-27.42 47.91-55.68 40.68M613.29 255.55c44.27-28 107.44 13.7 100.63 65.12-2.3 51.92-71.26 82-110.17 46.9-37.62-27.57-31.92-90.82 9.54-112.02M1289.1 285.26c19.75-50.9 99.78-52.44 122.26-2.89 22.22 38.56-5.11 86.31-44.7 99.42-52.44 9.79-102.25-46.9-77.56-96.53M919 378.9c-.43-43.75 39.42-76.35 81-79.33 27.58 5.53 57.64 17.28 69.47 45.11 22.05 38.39 2.47 91.25-37.37 108.87-18.22 10.21-39.76 6.38-59.6 5.19-30.33-14.89-55.87-44.09-53.5-79.84M221.75 442.65c40.44-24.86 95 20.51 79.69 64.44-8.43 38-59.51 53.46-88.71 29.2-31.17-22.73-26.23-77.38 9.02-93.64M1719 442.57c34.31-26.64 90.93 3.92 86.84 47.24 2.3 39.5-46.65 69.29-80.71 48.95-37.51-16.86-41.34-74.57-6.13-96.19M1115.08 521.22c56.62-20.34 123.87 4 156.14 54.48 42.57 61.71 19.92 155.69-46.14 191.1-68.45 41.88-168.4 6.38-193.68-70.06-28.7-68.43 13.11-154.07 83.68-175.52M782.88 527.95c62.75-29.62 147.2-4.77 177.51 59.42 35.67 62.48 8.09 149.48-55.68 181.74-63.85 36.26-153.93 8.77-184.83-58.31-34.65-64.87-3.88-152.98 63-182.85M450.25 641.67c4.77-40.43 42.91-66.74 81.39-69.46 41.46 5 74.58 37.2 79.09 79.16-2.72 41.54-34.82 82.14-78.84 81.89-48.43 4.17-90.89-44.01-81.64-91.59M1432.73 581c49.72-28.94 118.76 13.19 116.55 70.31 3.41 60.52-73 103.17-122.51 67.67-51.43-29.56-47.42-112.81 5.96-137.98M647.69 794.3c58.15-16 124.64 11.41 153.16 64.86 31.24 53.8 18.47 128.54-30.05 168-62.23 57.88-177 34.64-210.12-44.35-38.06-72.41 8.17-169.45 87.01-188.51M1277.78 794c56.53-16.17 122.94 5.62 153.33 57.12 40.18 58.9 21 146.75-38.82 184.72-62.66 44.09-159.72 20.94-194.2-48-41.8-71.31.26-172.09 79.69-193.84M273.68 861.2c50.23-19 105.91 36.43 85.56 86.23-12.43 45.37-76.37 62.14-109.4 28.69-38.65-31.41-24.34-101.3 23.84-114.92M1635.18 933.47c-1.45-41.62 29-78.48 71.68-80.78 34.4 5.45 67.85 33.2 65.13 70.65 3.15 49.46-56.45 83.08-98.59 59.84-19.75-10.04-29.88-30.3-38.22-49.71M26.7 885.63c30.22-13.19 67.6 13 60.7 46.56-1.62 38-57.72 52.61-78.33 20.86C-9.14 931 1.76 897 26.7 885.63zM1932.13 884.87c21.28-15.15 55.42-4.26 63.85 20.6 14.3 27.15-11.92 64.35-42.48 59.76-42.9 3.91-56.78-61.47-21.37-80.36M811.83 1067.28c79.52-20.68 165 45.63 165.5 127.51 5.19 82.74-79 156.11-160.4 137-62.92-10.13-112.29-70.74-110.25-134.32-.17-60.81 45.72-117.33 105.15-130.19M1126.75 1067.11c80.71-22.56 168.74 44.94 167.46 128.71 4.26 81.21-77.3 152.11-157 136-75-9.7-130.34-92.1-109.4-164.88 10.57-48.5 51.09-87.94 98.94-99.83M519.56 1117.51c55.85-9.53 108.21 52.78 85.56 105.81-16.52 56.51-98.76 71.84-135.12 25.68-42.65-44.33-10.81-125.37 49.56-131.49M1443.11 1120c49.8-20.86 110.93 22.22 107.1 76.27 2 59.5-73.47 100.53-122.17 65.8-55.16-31.18-45.12-122.94 15.07-142.07M1701.25 1378.92c-19.5-36.35 15.92-84.53 56.28-77.8 20.09-.34 34.14 15.49 47 28.77 2.64 21.54 7.07 47.24-10.81 63.84-24.28 30.73-79.28 21.96-92.47-14.81M221.58 1311.24c37.72-25.11 92 12.34 83.52 56.44-4.51 39-53.64 61.29-86 39.16-34.73-20.09-33.45-77.29 2.48-95.6M966.78 1392.88c49.38-21.79 112.29 21.2 107.61 75.59 3.66 60.1-74.15 101.72-122.43 65.63-53.63-30.99-44.69-122.16 14.82-141.22M621.63 1473.4c42.06-22.13 98.5 16.09 94.67 63.16 1.28 38.65-36.44 71.59-74.58 65.88-31.59-.68-52.19-29-62.32-55.93.52-29.35 12.6-62.04 42.23-73.11M1320.77 1474.08c43.25-26.73 104.72 11.66 100.63 62 1.11 52.61-68.36 86.31-108.63 51.75-38.99-27.09-34.23-92.21 8-113.75M1442.35 1774.65c-19.24-29.11 3.41-64.18 34.65-70.82 25.12 5.11 51.68 24 46.4 53.12-3.66 39.41-61.3 51.5-81.05 17.7M477.24 1749.37c7.66-23.07 26.22-46 53.38-40 39.59 2.81 51.34 62.48 16.69 80.87-31.16 21.01-67.31-7.76-70.07-40.87M942.85 1775.84c7.58-34.13 51.76-50.73 80.88-32.6 19.24 8.26 24.86 29.79 29.8 48.09-2.64 9.53-5 19.07-7.32 28.6-11.92 14.13-27.24 28.26-47.08 27.75-36.87 4.32-70.13-37.36-56.28-71.84\"/></g></svg>\r\n            </div>  \r\n            <div className=\"copyright-text text-center\">\r\n                <a href=\"https://twitter.com/anarchy_cnft\" style={{margin: \"0 20px 0 0\", color: \"#fff\"}}>\r\n                    <FaTwitter size=\"2em\"/>\r\n                </a>\r\n                <a href=\"https://instagram.com/anarchy_cnft\" style={{margin: \"0 20px 0 0\", color: \"#fff\"}}>\r\n                    <FaInstagram size=\"2em\"/>\r\n                </a>\r\n                <a href=\"mailto:anarchycnft@gmail.com\" style={{padding:\"0.5rem\", color: \"#fff\"}}>\r\n                    <FaEnvelope size=\"2em\"/>\r\n                </a>\r\n            </div>  \r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\"\r\n// import logo from '../../components/Logo/logo.svg';\r\n\r\nimport Header from '../../components/Header/Header';\r\nimport Content from './Content';\r\nimport Footer from '../../components/Footer/Footer';\r\n\r\nclass Index extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Header />\r\n                <Content />\r\n                <Footer />\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Index;","import React from 'react';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport Index from './views/Index/Index';\r\n\r\nfunction App() {\r\n  return (\r\n    <Index />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}